webpackJsonp([0],[,,function(s,a){function n(s){return null==s?"":s.toString()}s.exports=n},,,function(s,a,n){var l,p;l=n(8),p=n(38),s.exports=l||{},s.exports.__esModule&&(s.exports=s.exports["default"]),p&&(("function"==typeof s.exports?s.exports.options||(s.exports.options={}):s.exports).template=p)},,,function(s,a,n){"use strict";function l(s){return s&&s.__esModule?s:{"default":s}}Object.defineProperty(a,"__esModule",{value:!0});var p=n(34),t=l(p),e=n(33),c=l(e);a["default"]={filters:{replaceLinks:function(s){return s?s.replace(/([a-zA-Z0-9_-]+)\.md/gi,"/$1").replace(/home/gi,""):s}},data:function(){return{content:null,error:null}},route:{canReuse:!1,activate:function(){try{this.init()}catch(s){this.error=!0}}},computed:{page:function(){return this.$route.params.page||"home"},title:function(){return this.page?(0,c["default"])((0,t["default"])(this.page)):void 0}},created:function(){this.page?document.title=this.title+" | AdminPlus Lite":document.title="AdminPlus Lite"},ready:function(){this.error&&this.$router.go({name:"docs.home"})},methods:{init:function(){this.content=n(44)("./"+this.page+".md")}}}},,,,,,,,,,,,,,,,,function(s,a){s.exports='<h1 id=basic-usage-npm->Basic usage (npm)</h1> <p>The most simple npm setup and minimal boilerplate to get started with AdminPlus Lite. For this example, we&#39;re not going to use any build tools.</p> <h3 id=code>Code</h3> <blockquote> <p>If you&#39;d rather see the complete code for this guide, clone the <a href=https://github.com/themekit/adminplus-boilerplate-npm>adminplus-boilerplate-npm</a> Github repository. </p> </blockquote> <h3 id=demo>Demo</h3> <blockquote> <p>You can also <a href=http://npm.adminplus-boilerplate.themekit.io>see a working live demo</a> of the files we&#39;re creating in this guide.</p> </blockquote> <h3 id=features>Features</h3> <ul> <li>simple npm setup</li> <li>no build tools</li> <li>static HTML layout examples</li> </ul> <hr> <h2 id=boilerplate-usage>Boilerplate usage</h2> <h4 id=clone-the-boilerplate-repository>Clone the boilerplate repository</h4> <pre><code class=lang-bash>git <span class=hljs-keyword>clone</span> <span class=hljs-title>\\ \n  https</span>://github.com/themekit/adminplus-boilerplate-npm.git \\\n  my-project\n</code></pre> <pre><code class=lang-bash>cd <span class=hljs-keyword>my</span>-project\n</code></pre> <h4 id=install-dependencies>Install dependencies</h4> <pre><code class=lang-bash>npm <span class=hljs-keyword>install</span>\n</code></pre> <h4 id=copy-vendor-assets>Copy vendor assets</h4> <pre><code class=lang-bash>npm <span class=hljs-built_in>run</span> <span class=hljs-keyword>copy</span>-vendor\n</code></pre> <hr> <h2 id=project-structure>Project structure</h2> <blockquote> <p>Our final project structure will look like this:</p> </blockquote> <pre><code>├── index<span class=hljs-selector-class>.html</span>\n├── sidebar<span class=hljs-selector-class>.html</span>\n├── package<span class=hljs-selector-class>.json</span>\n├── node_modules\n└── vendor\n    ├── adminplus<span class=hljs-selector-class>.css</span>\n    ├── adminplus<span class=hljs-selector-class>.js</span>\n    ├── bootstrap<span class=hljs-selector-class>.min</span><span class=hljs-selector-class>.js</span>\n    ├── jquery<span class=hljs-selector-class>.min</span><span class=hljs-selector-class>.js</span>\n    └── tether<span class=hljs-selector-class>.min</span><span class=hljs-selector-class>.js</span>\n</code></pre><h2 id=setup>Setup</h2> <h3 id=package-json>package.json</h3> <blockquote> <p>Assuming you&#39;re working from a new project (empty) directory, you&#39;ll need to create a package.json file. To create a package.json file using npm, run <code>npm init</code>.</p> </blockquote> <h3 id=install-dependencies>Install dependencies</h3> <blockquote> <p>Install adminplus and it&#39;s dependencies (note jQuery and Tether are required by Bootstrap 4):</p> </blockquote> <pre><code class=lang-bash><span class=hljs-built_in>npm</span> install --save <span class=hljs-string>\\</span>\n    adminplus@<span class=hljs-number>1.0</span>.<span class=hljs-number>0</span>-alpha.<span class=hljs-number>10</span> <span class=hljs-string>\\</span>\n    bootstrap-layout@<span class=hljs-number>1.0</span>.<span class=hljs-number>0</span>-alpha.<span class=hljs-number>4</span> <span class=hljs-string>\\</span>\n    bootstrap@<span class=hljs-number>4.0</span>.<span class=hljs-number>0</span>-alpha.<span class=hljs-number>2</span> <span class=hljs-string>\\</span>\n    jquery@<span class=hljs-number>2</span> <span class=hljs-string>\\</span>\n    tether\n</code></pre> <h3 id=dev-tools>Dev tools</h3> <blockquote> <p>Install dev dependencies:</p> </blockquote> <pre><code class=lang-bash><span class=hljs-built_in>npm</span> install --save-dev <span class=hljs-string>\\</span>\n    copyfiles\n</code></pre> <h3 id=update-package-json>Update package.json</h3> <blockquote> <p>Within the <code>scripts</code> section of your package.json file, add the following <code>copy-vendor</code> entry:</p> </blockquote> <pre><code class=lang-js>{\n  "<span class=hljs-attr>scripts</span>": {\n    "<span class=hljs-attr>copy-vendor</span>": <span class=hljs-string>"copyfiles -f node_modules/adminplus/dist/* node_modules/bootstrap/dist/js/bootstrap.min.js node_modules/jquery/dist/jquery.min.js node_modules/tether/dist/js/tether.min.js vendor"</span>\n  }\n}\n</code></pre> <h3 id=copy-assets>Copy assets</h3> <blockquote> <p>Using the <code>copy-vendor</code> npm script we just created, let&#39;s copy the required assets from <code>node_modules</code> into the <code>vendor</code> directory. Run:</p> </blockquote> <pre><code class=lang-bash>npm <span class=hljs-built_in>run</span> <span class=hljs-keyword>copy</span>-vendor\n</code></pre> <hr> <h2 id=html>HTML</h2> <blockquote> <p>Finally, to complete our simple project, let&#39;s create some HTML pages!</p> </blockquote> <h3 id=index-html>index.html</h3> <blockquote> <p>Fixed layout:</p> </blockquote> <pre><code class=lang-html><span class=hljs-meta>&lt;!DOCTYPE html&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>html</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"bootstrap-layout"</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>head</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>charset</span>=<span class=hljs-string>"utf-8"</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>http-equiv</span>=<span class=hljs-string>"X-UA-Compatible"</span> <span class=hljs-attr>content</span>=<span class=hljs-string>"IE=edge"</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>name</span>=<span class=hljs-string>"viewport"</span> <span class=hljs-attr>content</span>=<span class=hljs-string>"width=device-width, initial-scale=1"</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>title</span>&gt;</span>adminplus-boilerplate-npm demo<span class=hljs-tag>&lt;/<span class=hljs-name>title</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Material Design Icons --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>link</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"https://fonts.googleapis.com/icon?family=Material+Icons"</span> <span class=hljs-attr>rel</span>=<span class=hljs-string>"stylesheet"</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Roboto Web Font --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>link</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"https://fonts.googleapis.com/css?family=Roboto:regular,bold,italic,thin,light,bolditalic,black,medium&amp;amp;lang=en"</span> <span class=hljs-attr>rel</span>=<span class=hljs-string>"stylesheet"</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- AdminPlus Lite CSS (includes Bootstrap) --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>link</span> <span class=hljs-attr>type</span>=<span class=hljs-string>"text/css"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"vendor/adminplus.css"</span> <span class=hljs-attr>rel</span>=<span class=hljs-string>"stylesheet"</span>&gt;</span>\n\n<span class=hljs-tag>&lt;/<span class=hljs-name>head</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>body</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"layout-container ls-top-navbar"</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Navbar --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>nav</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar navbar-dark bg-primary navbar-full navbar-fixed-top"</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"container"</span>&gt;</span>\n\n      <span class=hljs-comment>&lt;!-- Navbar toggle --&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>button</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar-toggler hidden-md-up pull-xs-right last-child-xs"</span> <span class=hljs-attr>type</span>=<span class=hljs-string>"button"</span> <span class=hljs-attr>data-toggle</span>=<span class=hljs-string>"collapse"</span> <span class=hljs-attr>data-target</span>=<span class=hljs-string>"#navbar"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>span</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"material-icons"</span>&gt;</span>menu<span class=hljs-tag>&lt;/<span class=hljs-name>span</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>button</span>&gt;</span>\n\n      <span class=hljs-comment>&lt;!-- Brand --&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar-brand"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span>&gt;</span>Brand<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span>\n\n      <span class=hljs-comment>&lt;!-- Collapse --&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"collapse navbar-toggleable-xs"</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"navbar"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>ul</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav navbar-nav"</span>&gt;</span>\n          <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-item active"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-link"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span>&gt;</span>Fixed<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n          <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-item"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-link"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"sidebar.html"</span>&gt;</span>Sidebar<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n        <span class=hljs-tag>&lt;/<span class=hljs-name>ul</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n      <span class=hljs-comment>&lt;!-- // END Collapse --&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>nav</span>&gt;</span>\n  <span class=hljs-comment>&lt;!-- // END Navbar --&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Content --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"layout-content"</span> <span class=hljs-attr>data-scrollable</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"container"</span>&gt;</span>\n\n      <span class=hljs-comment>&lt;!-- Breadcrumb --&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>ol</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"breadcrumb"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>li</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span>&gt;</span>AdminPlus<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"active"</span>&gt;</span>Fixed layout<span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>ol</span>&gt;</span>\n      <span class=hljs-comment>&lt;!-- // END Breadcrumb --&gt;</span>\n\n      <span class=hljs-tag>&lt;<span class=hljs-name>h1</span>&gt;</span>Hello World<span class=hljs-tag>&lt;/<span class=hljs-name>h1</span>&gt;</span>\n\n      <span class=hljs-tag>&lt;<span class=hljs-name>p</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"lead"</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Repudiandae ea ullam iusto asperiores repellat perspiciatis error. Quo praesentium, expedita neque natus quisquam iure consequuntur unde hic doloribus ab voluptas pariatur!<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n\n      <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"card"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"card-block"</span>&gt;</span>\n          This is a demo for the <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>target</span>=<span class=hljs-string>"_blank"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"https://github.com/themekit/adminplus-boilerplate-npm"</span>&gt;</span>adminplus-boilerplate-npm<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span> repository. <span class=hljs-tag>&lt;<span class=hljs-name>br</span>&gt;</span>\n          Read the full guide <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>target</span>=<span class=hljs-string>"_blank"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"http://adminplus.themekit.io/basic-usage"</span>&gt;</span>Simple npm workflow<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span>.\n        <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-comment>&lt;!-- // END Content --&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- jQuery --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"vendor/jquery.min.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Bootstrap --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"vendor/tether.min.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"vendor/bootstrap.min.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- AdminPlus --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"vendor/adminplus.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Initialize Scrollbars --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=undefined>\n    AdminPlus.Scrollable()\n  </span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-tag>&lt;/<span class=hljs-name>body</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>html</span>&gt;</span>\n</code></pre> <h3 id=sidebar-html>sidebar.html</h3> <blockquote> <p>Sidebar layout:</p> </blockquote> <pre><code class=lang-html><span class=hljs-meta>&lt;!DOCTYPE html&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>html</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"bootstrap-layout"</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>head</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>charset</span>=<span class=hljs-string>"utf-8"</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>http-equiv</span>=<span class=hljs-string>"X-UA-Compatible"</span> <span class=hljs-attr>content</span>=<span class=hljs-string>"IE=edge"</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>name</span>=<span class=hljs-string>"viewport"</span> <span class=hljs-attr>content</span>=<span class=hljs-string>"width=device-width, initial-scale=1"</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>title</span>&gt;</span>adminplus-boilerplate-npm demo<span class=hljs-tag>&lt;/<span class=hljs-name>title</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Material Design Icons --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>link</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"https://fonts.googleapis.com/icon?family=Material+Icons"</span> <span class=hljs-attr>rel</span>=<span class=hljs-string>"stylesheet"</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Roboto Web Font --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>link</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"https://fonts.googleapis.com/css?family=Roboto:regular,bold,italic,thin,light,bolditalic,black,medium&amp;amp;lang=en"</span> <span class=hljs-attr>rel</span>=<span class=hljs-string>"stylesheet"</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- AdminPlus Lite CSS (includes Bootstrap) --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>link</span> <span class=hljs-attr>type</span>=<span class=hljs-string>"text/css"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"vendor/adminplus.css"</span> <span class=hljs-attr>rel</span>=<span class=hljs-string>"stylesheet"</span>&gt;</span>\n\n<span class=hljs-tag>&lt;/<span class=hljs-name>head</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>body</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"layout-container ls-top-navbar si-l3-md-up"</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Navbar --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>nav</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar navbar-light bg-white navbar-full navbar-fixed-top ls-left-sidebar"</span>&gt;</span>\n\n    <span class=hljs-comment>&lt;!-- Navbar toggle --&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>button</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar-toggler hidden-md-up pull-xs-right"</span> <span class=hljs-attr>type</span>=<span class=hljs-string>"button"</span> <span class=hljs-attr>data-toggle</span>=<span class=hljs-string>"collapse"</span> <span class=hljs-attr>data-target</span>=<span class=hljs-string>"#navbar"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>span</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"material-icons"</span>&gt;</span>menu<span class=hljs-tag>&lt;/<span class=hljs-name>span</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>button</span>&gt;</span>\n\n    <span class=hljs-comment>&lt;!-- Sidebar toggle --&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>button</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar-toggler pull-xs-left"</span> <span class=hljs-attr>type</span>=<span class=hljs-string>"button"</span> <span class=hljs-attr>data-toggle</span>=<span class=hljs-string>"sidebar"</span> <span class=hljs-attr>data-target</span>=<span class=hljs-string>"#sidebar"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>span</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"material-icons"</span>&gt;</span>menu<span class=hljs-tag>&lt;/<span class=hljs-name>span</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>button</span>&gt;</span>\n\n    <span class=hljs-comment>&lt;!-- Brand --&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>span</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar-brand"</span>&gt;</span>Sidebar layout<span class=hljs-tag>&lt;/<span class=hljs-name>span</span>&gt;</span>\n\n    <span class=hljs-comment>&lt;!-- Collapse --&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"collapse navbar-toggleable-xs"</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"navbar"</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>ul</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav navbar-nav"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-item"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-link"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span>&gt;</span>Fixed<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-item active"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-link"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"sidebar.html"</span>&gt;</span>Sidebar<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>ul</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-comment>&lt;!-- // END Collapse --&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>nav</span>&gt;</span>\n  <span class=hljs-comment>&lt;!-- // END Navbar --&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Sidebar --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar sidebar-left si-si-3 sidebar-visible-md-up sidebar-dark bg-primary"</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"sidebar"</span> <span class=hljs-attr>data-scrollable</span>&gt;</span>\n\n    <span class=hljs-comment>&lt;!-- Brand --&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-brand"</span>&gt;</span>Brand<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span>\n\n    <span class=hljs-comment>&lt;!-- Menu --&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>ul</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu sm-active-button-bg"</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu-item"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu-button"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>i</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu-icon material-icons"</span>&gt;</span>home<span class=hljs-tag>&lt;/<span class=hljs-name>i</span>&gt;</span> Fixed layout<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu-item active"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu-button"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"sidebar.html"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>i</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu-icon material-icons"</span>&gt;</span>menu<span class=hljs-tag>&lt;/<span class=hljs-name>i</span>&gt;</span> Sidebar layout<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>ul</span>&gt;</span>\n    <span class=hljs-comment>&lt;!-- // END Menu --&gt;</span>\n\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-comment>&lt;!-- // END Sidebar --&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Content --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"layout-content"</span> <span class=hljs-attr>data-scrollable</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"container-fluid"</span>&gt;</span>\n\n      <span class=hljs-comment>&lt;!-- Breadcrumb --&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>ol</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"breadcrumb"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>li</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span>&gt;</span>AdminPlus<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"active"</span>&gt;</span>Sidebar layout<span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>ol</span>&gt;</span>\n      <span class=hljs-comment>&lt;!-- // END Breadcrumb --&gt;</span>\n\n      <span class=hljs-tag>&lt;<span class=hljs-name>h1</span>&gt;</span>Hello World<span class=hljs-tag>&lt;/<span class=hljs-name>h1</span>&gt;</span>\n\n      <span class=hljs-tag>&lt;<span class=hljs-name>p</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"lead"</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Repudiandae ea ullam iusto asperiores repellat perspiciatis error. Quo praesentium, expedita neque natus quisquam iure consequuntur unde hic doloribus ab voluptas pariatur!<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n\n      <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"card"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"card-block"</span>&gt;</span>\n          This is a demo for the <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>target</span>=<span class=hljs-string>"_blank"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"https://github.com/themekit/adminplus-boilerplate-npm"</span>&gt;</span>adminplus-boilerplate-npm<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span> repository. <span class=hljs-tag>&lt;<span class=hljs-name>br</span>&gt;</span>\n          Read the full guide <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>target</span>=<span class=hljs-string>"_blank"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"http://adminplus.themekit.io/basic-usage"</span>&gt;</span>Simple npm workflow<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span>.\n        <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-comment>&lt;!-- // END Content --&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- jQuery --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"vendor/jquery.min.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Bootstrap --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"vendor/tether.min.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"vendor/bootstrap.min.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- AdminPlus --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"vendor/adminplus.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Initialize --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span>&gt;</span><span class=actionscript>\n    <span class=hljs-comment>// Initialize Sidebar</span>\n    AdminPlus.Sidebar.init()\n\n    <span class=hljs-comment>// Initialize Scrollbars</span>\n    AdminPlus.Scrollable()\n  </span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-tag>&lt;/<span class=hljs-name>body</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>html</span>&gt;</span>\n</code></pre>';
},function(s,a){s.exports='<h1 id=advanced-gulp-workflow-using-the-adminplus-lite-bootstrap-theme>Advanced Gulp workflow using the AdminPlus Lite Bootstrap Theme</h1> <p>For this example, we are using Gulp as the primary build tool and we get to see how to work with the Sass source files provided with AdminPlus Lite, use a module system, setup file watchers and more.</p> <h3 id=code>Code</h3> <blockquote> <p>If you&#39;d rather see the complete code for this guide or start a blank project using this boilerplate, clone the <a href=https://github.com/themekit/adminplus-boilerplate-gulp-advanced>adminplus-boilerplate-gulp-advanced</a> Github repository. </p> </blockquote> <h3 id=demo>Demo</h3> <blockquote> <p>You can also <a href=http://gulp-advanced.adminplus-boilerplate.themekit.io>see a working live demo</a> of the boilerplate we&#39;re builing in this guide.</p> </blockquote> <h3 id=features>Features</h3> <ul> <li>advanced <a href=https://github.com/gulpjs/gulp>gulp</a> workflow</li> <li>compile Sass using <a href=https://github.com/dlmanning/gulp-sass>gulp-sass</a> (gulp wrapper for <a href=https://github.com/sass/node-sass>node-sass</a>)</li> <li>import Sass files directly from node_modules using <a href=https://github.com/themekit/sass-importer-npm>sass-importer-npm</a></li> <li>watch Sass files for changes and recompile</li> <li>Minify CSS using <a href=https://github.com/scniro/gulp-clean-css>gulp-clean-css</a> (gulp wrapper for <a href=https://github.com/jakubpawlowicz/clean-css>clean-css</a>)</li> <li>Automatically add CSS browser vendor prefixes to support the 2 most recent versions of all major browsers using <a href=https://github.com/postcss/postcss>PostCSS</a> and <a href=https://github.com/postcss/autoprefixer>autoprefixer</a></li> <li>generate CSS sourcemaps to enhance log messages when debugging</li> <li>leverage <a href=https://github.com/substack/node-browserify>browserify</a> module system to bundle external vendor scripts and app scripts into a single JavaScript file</li> <li>watch JavaScript files for changes and recompile browserify bundles, using <a href=https://github.com/substack/watchify>watchify</a> for fast incremental rebuilds</li> <li>generate sourcemaps for browserify bundles to enhance log messages when debugging</li> <li>clean dist assets before (re)builds using <a href=https://github.com/sindresorhus/del>del</a></li> <li>example of customizing AdminPlus Lite colors</li> </ul> <hr> <h2 id=boilerplate-usage>Boilerplate usage</h2> <blockquote> <p>You need to have gulp installed globally. Run <code>npm install -g gulp</code>.</p> </blockquote> <h4 id=clone-the-boilerplate-repository>Clone the boilerplate repository</h4> <pre><code class=lang-bash>git <span class=hljs-keyword>clone</span> <span class=hljs-title>\\ \n  https</span>://github.com/themekit/adminplus-boilerplate-gulp-advanced.git \\\n  my-project\n</code></pre> <pre><code class=lang-bash>cd <span class=hljs-keyword>my</span>-project\n</code></pre> <h4 id=install-dependencies>Install dependencies</h4> <pre><code class=lang-bash>npm <span class=hljs-keyword>install</span>\n</code></pre> <h4 id=build>Build</h4> <pre><code class=lang-bash>gulp\n</code></pre> <h4 id=watch>Watch</h4> <pre><code class=lang-bash><span class=hljs-attribute>gulp</span> watch\n</code></pre> <h2 id=project-structure>Project structure</h2> <blockquote> <p>Our final project structure will look like this:</p> </blockquote> <pre><code>├── dist\n│   ├── index<span class=hljs-selector-class>.html</span>\n│   ├── sidebar<span class=hljs-selector-class>.html</span>\n│   ├── css\n│   │   ├── app<span class=hljs-selector-class>.min</span><span class=hljs-selector-class>.css</span>\n│   │   └── app<span class=hljs-selector-class>.min</span><span class=hljs-selector-class>.css</span><span class=hljs-selector-class>.map</span>\n│   └── js\n│       ├── app<span class=hljs-selector-class>.browserify</span><span class=hljs-selector-class>.min</span><span class=hljs-selector-class>.js</span>\n│       └── app<span class=hljs-selector-class>.browserify</span><span class=hljs-selector-class>.min</span><span class=hljs-selector-class>.js</span><span class=hljs-selector-class>.map</span>\n├── gulpfile<span class=hljs-selector-class>.js</span>\n├── package<span class=hljs-selector-class>.json</span>\n├── node_modules\n└── src\n    ├── js\n    │   └── app<span class=hljs-selector-class>.browserify</span><span class=hljs-selector-class>.js</span>\n    └── sass\n        ├── _variables<span class=hljs-selector-class>.scss</span>\n        └── app.scss\n</code></pre><h2 id=package-json>package.json</h2> <blockquote> <p>Create a package.json file in order to save the project dependencies. Run <code>npm init</code> from your project directory.</p> </blockquote> <h2 id=development-tools>Development tools</h2> <h3 id=gulp>Gulp</h3> <blockquote> <p>Make sure you install gulp on your system globally:</p> </blockquote> <pre><code class=lang-bash>npm <span class=hljs-keyword>install</span> -<span class=hljs-keyword>g</span> gulp\n</code></pre> <h3 id=utilities>Utilities</h3> <blockquote> <p>Add gulp as a local dev dependency to your project and install gulp-load-plugins for lazy loading of gulp plugins, gulp-if for conditional pipeline, gulp-rename for renaming files, del for deleting files.</p> </blockquote> <pre><code class=lang-bash><span class=hljs-built_in>npm</span> install --save-dev <span class=hljs-string>\\</span>\n    gulp <span class=hljs-string>\\</span>\n    gulp-load-plugins <span class=hljs-string>\\</span>\n    gulp-<span class=hljs-keyword>if</span> <span class=hljs-string>\\</span>\n    gulp-rename <span class=hljs-string>\\</span>\n    del\n</code></pre> <h3 id=sass-css-auto-prefixing-minify-css-sourcemaps>Sass, CSS auto prefixing, minify CSS, sourcemaps</h3> <blockquote> <p>Install gulp-sass (a wrapper for node-sass) for compiling Sass files, gulp-postcss (wrapper for PostCSS) for transforming styles with JS plugins, gulp-sourcemaps to generate sourcemap files for easier debugging of Sass (and later JavaScript) files, autoprefixer for automatically adding browser vendor prefixes to our CSS files, gulp-clean-css (wrapper for clean-css) for minifying CSS, sass-importer-npm for resolving Sass imports from the node_modules directory.</p> </blockquote> <pre><code class=lang-bash><span class=hljs-built_in>npm</span> install --save-dev <span class=hljs-string>\\</span>\n    gulp-sass <span class=hljs-string>\\</span>\n    gulp-sourcemaps <span class=hljs-string>\\</span>\n    gulp-postcss <span class=hljs-string>\\</span>\n    autoprefixer <span class=hljs-string>\\</span>\n    gulp-clean-css <span class=hljs-string>\\</span>\n    sass-importer-<span class=hljs-built_in>npm</span>\n</code></pre> <h3 id=browserify-module-system-minify-js>Browserify module system, minify JS</h3> <blockquote> <p>Install browserify for compiling JS bundles, watchify for fast incremental browserify rebuilds on file changes, vinyl-source-stream to make the browserify bundle stream gulp compatible, vinyl-buffer to buffer file contents, lodash.assign (Object.assign for ES5), pretty-hrtime for logging timestamps, gulp-uglify for minifying JS, globby for reading files from a path using glob patterns.</p> </blockquote> <pre><code class=lang-bash><span class=hljs-built_in>npm</span> install --save-dev <span class=hljs-string>\\</span>\n    browserify <span class=hljs-string>\\</span>\n    watchify <span class=hljs-string>\\</span>\n    lodash.assign <span class=hljs-string>\\</span>\n    pretty-hrtime <span class=hljs-string>\\</span>\n    vinyl-buffer <span class=hljs-string>\\</span>\n    vinyl-source-stream <span class=hljs-string>\\</span>\n    gulp-uglify <span class=hljs-string>\\</span>\n    globby\n</code></pre> <hr> <h2 id=gulpfile-js>gulpfile.js</h2> <blockquote> <p>Create a gulpfile.js file with the following variables:</p> </blockquote> <pre><code class=lang-js><span class=hljs-keyword>var</span> gulp = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'gulp\'</span>);\n<span class=hljs-keyword>var</span> $ = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'gulp-load-plugins\'</span>)();\n</code></pre> <h3 id=options>Options</h3> <blockquote> <p>Helper variables which will allow us to easily modify the behaviour of our gulp tasks later.</p> </blockquote> <pre><code class=lang-js><span class=hljs-comment>// enable extra debug information, when possible</span>\n<span class=hljs-variable><span class=hljs-keyword>var</span> __DEBUG</span> = <span class=hljs-literal>true</span>;\n<span class=hljs-comment>// enable sourcemaps for Browserify bundles and Sass</span>\n<span class=hljs-variable><span class=hljs-keyword>var</span> __SOURCEMAPS</span> = <span class=hljs-literal>true</span>;\n<span class=hljs-comment>// clean dist files before (re)builds</span>\n<span class=hljs-variable><span class=hljs-keyword>var</span> __CLEAN</span> = <span class=hljs-literal>true</span>;\n<span class=hljs-comment>// minify .css and .js files</span>\n<span class=hljs-variable><span class=hljs-keyword>var</span> __MINIFY</span> = <span class=hljs-literal>true</span>;\n</code></pre> <h3 id=source-paths>Source paths</h3> <blockquote> <p>Source path variables for gulp tasks.</p> </blockquote> <pre><code class=lang-js><span class=hljs-comment>// SOURCE PATH OPTIONS</span>\n<span class=hljs-keyword>var</span> __SRC = <span class=hljs-string>\'./src\'</span>;\n<span class=hljs-keyword>var</span> __SRC_BROWSERIFY = [__SRC + <span class=hljs-string>\'/js/**/**.browserify.js\'</span>];\n<span class=hljs-keyword>var</span> __SRC_SASS = [\n  __SRC + <span class=hljs-string>\'/sass/**/*.scss\'</span>,\n  <span class=hljs-comment>// Ignore partials (file names prefixed with _)</span>\n  <span class=hljs-string>\'!\'</span> + __SRC + <span class=hljs-string>\'/sass/**/_*.scss\'</span>\n];\n</code></pre> <h3 id=destination-paths>Destination paths</h3> <blockquote> <p>Destination path variables.</p> </blockquote> <pre><code class=lang-js><span class=hljs-comment>// DIST PATH OPTIONS</span>\n<span class=hljs-keyword>var</span> __DIST = <span class=hljs-string>\'./dist\'</span>;\n<span class=hljs-keyword>var</span> __DIST_JS = __DIST + <span class=hljs-string>\'/js\'</span>;\n<span class=hljs-keyword>var</span> __DIST_CSS = __DIST + <span class=hljs-string>\'/css\'</span>;\n</code></pre> <h3 id=watch-paths>Watch paths</h3> <blockquote> <p>Path variables for gulp watchers.</p> </blockquote> <pre><code class=lang-js><span class=hljs-comment>// WATCH PATHS</span>\n<span class=hljs-keyword>var</span> __WATCH_SASS = [__SRC + <span class=hljs-string>\'/sass/**/**.scss\'</span>];\n<span class=hljs-keyword>var</span> __WATCH_BROWSERIFY = __SRC_BROWSERIFY;\n</code></pre> <h3 id=clean-paths>Clean paths</h3> <blockquote> <p>Path variables for clean tasks.</p> </blockquote> <pre><code class=lang-js>// CLEAN PATHS\n// clean Browserify bundles\nvar __CLEAN_BROWSERIFY = [\n  // Bundles\n  __DIST_JS + \'/<span class=hljs-keyword>*</span><span class=hljs-keyword>*</span>/<span class=hljs-keyword>*</span><span class=hljs-keyword>*</span>.browserify.js\',\n  // Minified bundles\n  __DIST_JS + \'/<span class=hljs-keyword>*</span><span class=hljs-keyword>*</span>/<span class=hljs-keyword>*</span><span class=hljs-keyword>*</span>.browserify.min.js\',\n  // .map files\n  __DIST_JS + \'/<span class=hljs-keyword>*</span><span class=hljs-keyword>*</span>/<span class=hljs-keyword>*</span><span class=hljs-keyword>*</span>.browserify.js.map\',\n  __DIST_JS + \'/<span class=hljs-keyword>*</span><span class=hljs-keyword>*</span>/<span class=hljs-keyword>*</span><span class=hljs-keyword>*</span>.browserify.min.js.map\'\n];\nvar __CLEAN_CSS = __DIST_CSS;\n</code></pre> <h3 id=clean-tasks>Clean tasks</h3> <blockquote> <p>Delete files from previous builds before rebuilding. Run with <code>gulp clean-browserify</code> and <code>gulp clean-css</code>.</p> </blockquote> <pre><code class=lang-js><span class=hljs-keyword>var</span> del = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'del\'</span>);\n\n<span class=hljs-comment>// CLEAN DIST JS BROWSERIFY BUNDLES</span>\ngulp.task(<span class=hljs-string>\'clean-browserify\'</span>, <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params>cb</span>) </span>{\n  <span class=hljs-keyword>if</span> (!__CLEAN) {\n    <span class=hljs-keyword>return</span> cb()\n  }\n  del(__CLEAN_BROWSERIFY).then(<span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params></span>) </span>{\n    cb()\n  });\n});\n\n<span class=hljs-comment>// CLEAN DIST CSS</span>\ngulp.task(<span class=hljs-string>\'clean-css\'</span>, <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params>cb</span>) </span>{\n  <span class=hljs-keyword>if</span> (!__CLEAN) {\n    <span class=hljs-keyword>return</span> cb()\n  }\n  del(__CLEAN_CSS).then(<span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params></span>) </span>{\n    cb()\n  });\n});\n</code></pre> <h3 id=watch-mode>Watch mode</h3> <blockquote> <p>The following task will be called before running any watcher and sets a global <code>__WATCHING</code> flag to let other tasks know we&#39;re in watch mode.</p> </blockquote> <pre><code class=lang-js>gulp.task(<span class=hljs-string>\'watch:set\'</span>, <span class=hljs-function><span class=hljs-keyword>function</span> <span class=hljs-params>(cb)</span> </span>{\n  <span class=hljs-keyword>global</span>.__WATCHING = <span class=hljs-keyword>true</span>\n  cb()\n});\n</code></pre> <h3 id=compile-sass-task>Compile Sass task</h3> <blockquote> <p>Compile Sass, autoprefix CSS, minify CSS, generate sourcemaps. Run with <code>gulp sass</code>.</p> </blockquote> <pre><code class=lang-js>gulp.task(<span class=hljs-string>\'sass\'</span>, [<span class=hljs-string>\'clean-css\'</span>], <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params></span>) </span>{\n  <span class=hljs-keyword>return</span> gulp.src(__SRC_SASS)\n    <span class=hljs-comment>// (optional) sourcemaps</span>\n    .pipe($.<span class=hljs-keyword>if</span>(__SOURCEMAPS, $.sourcemaps.init()))\n    <span class=hljs-comment>// Compile Sass</span>\n    .pipe($.sass({ \n      <span class=hljs-comment>// Resolve Sass file imports from node_modules</span>\n      importer: <span class=hljs-built_in>require</span>(<span class=hljs-string>\'sass-importer-npm\'</span>) \n    })\n    <span class=hljs-comment>// Handle errors</span>\n    .on(<span class=hljs-string>\'error\'</span>, $.sass.logError))\n    <span class=hljs-comment>// Post CSS</span>\n    .pipe($.postcss([\n      <span class=hljs-comment>// autoprefixer</span>\n      <span class=hljs-built_in>require</span>(<span class=hljs-string>\'autoprefixer\'</span>)({ browsers: [<span class=hljs-string>\'last 2 versions\'</span>] })\n    ]))\n    <span class=hljs-comment>// (optional) Minify CSS</span>\n    .pipe($.<span class=hljs-keyword>if</span>(__MINIFY, $.rename({ extname: <span class=hljs-string>\'.min.css\'</span> })))\n    .pipe($.<span class=hljs-keyword>if</span>(__MINIFY, $.cleanCss()))\n    <span class=hljs-comment>// (optional) Write .map file</span>\n    .pipe($.<span class=hljs-keyword>if</span>(__SOURCEMAPS, $.sourcemaps.write(<span class=hljs-string>\'./\'</span>)))\n    <span class=hljs-comment>// Write CSS file</span>\n    .pipe(gulp.dest(__DIST_CSS))\n});\n</code></pre> <h3 id=watch-sass-task>Watch Sass task</h3> <blockquote> <p>Watch Sass source files and recompile on file changes. Run with <code>gulp sass:watch</code>.</p> </blockquote> <pre><code class=lang-js>gulp.task(<span class=hljs-string>\'sass:watch\'</span>, [<span class=hljs-string>\'watch:set\'</span>], <span class=hljs-function><span class=hljs-keyword>function</span> <span class=hljs-params>()</span> </span>{\n  gulp.watch(__WATCH_SASS, [<span class=hljs-string>\'sass\'</span>]);\n});\n</code></pre> <h3 id=browserify-dependencies>Browserify dependencies</h3> <pre><code class=lang-js><span class=hljs-comment>// BROWSERIFY DEPENDENCIES</span>\n<span class=hljs-keyword>var</span> browserify = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'browserify\'</span>);\n<span class=hljs-keyword>var</span> watchify = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'watchify\'</span>);\n<span class=hljs-keyword>var</span> source = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'vinyl-source-stream\'</span>);\n<span class=hljs-keyword>var</span> buffer = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'vinyl-buffer\'</span>);\n<span class=hljs-keyword>var</span> globby = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'globby\'</span>);\n<span class=hljs-keyword>var</span> path = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'path\'</span>);\n<span class=hljs-keyword>var</span> assign = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'lodash.assign\'</span>);\n</code></pre> <h3 id=browserify-logging-helper>Browserify logging helper</h3> <blockquote> <p>Provide logs for browserify bundlers.</p> </blockquote> <pre><code class=lang-js><span class=hljs-keyword>var</span> prettyHrtime = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'pretty-hrtime\'</span>);\n<span class=hljs-keyword>var</span> _startTime;\n<span class=hljs-keyword>var</span> bundleLogger = {\n  start: <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params>filepath</span>) </span>{\n    _startTime = process.hrtime();\n    $.util.log(<span class=hljs-string>\'Bundling\'</span>, $.util.colors.green(filepath) + <span class=hljs-string>\'...\'</span>);\n  },\n  end: <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params>filepath</span>) </span>{\n    <span class=hljs-keyword>var</span> taskTime = process.hrtime(_startTime);\n    <span class=hljs-keyword>var</span> prettyTime = prettyHrtime(taskTime);\n    $.util.log(<span class=hljs-string>\'Bundled\'</span>, $.util.colors.green(filepath), <span class=hljs-string>\'in\'</span>, $.util.colors.magenta(prettyTime));\n  }\n}\n</code></pre> <h3 id=compile-browserify-bundles-task>Compile Browserify bundles task</h3> <blockquote> <p>Compile Browserify, minify JS, generate sourcemaps, wrap with watchify when using watch mode for fast incremental rebuilds. Run with <code>gulp browserify</code>.</p> </blockquote> <pre><code class=lang-js>gulp.task(<span class=hljs-string>\'browserify\'</span>, [<span class=hljs-string>\'clean-browserify\'</span>], <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params>callback</span>) </span>{\n  globby(__SRC_BROWSERIFY).then(<span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params>bundles</span>) </span>{\n\n    <span class=hljs-keyword>var</span> bundleQueue = bundles.length;\n    bundles = bundles.map(<span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params>bundle</span>) </span>{\n      <span class=hljs-keyword>return</span> {\n        src: bundle,\n        dest: __DIST_JS,\n        bundleName: path.basename(bundle)\n      }\n    });\n\n    <span class=hljs-keyword>var</span> browserifyThis = <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params>bundleConfig</span>) </span>{\n      <span class=hljs-keyword>var</span> opts = assign({}, watchify.args, {\n        <span class=hljs-comment>// Specify the entry point of your app</span>\n        entries: bundleConfig.src,\n        <span class=hljs-comment>// Enable source maps!</span>\n        debug: __DEBUG,\n        paths: [\n          <span class=hljs-comment>// Resolve files from node_modules</span>\n          path.resolve(__dirname, <span class=hljs-string>\'node_modules\'</span>)\n        ]\n      });\n      <span class=hljs-keyword>var</span> bundler = browserify(opts);\n\n      <span class=hljs-keyword>var</span> bundle = <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params></span>) </span>{\n        <span class=hljs-comment>// Log when bundling starts</span>\n        bundleLogger.start(path.join(bundleConfig.dest, bundleConfig.bundleName));\n\n        <span class=hljs-keyword>return</span> bundler\n          .bundle()\n          <span class=hljs-comment>// Report compile errors</span>\n          .on(<span class=hljs-string>\'error\'</span>, $.util.log)\n          <span class=hljs-comment>// Use vinyl-source-stream to make the</span>\n          <span class=hljs-comment>// stream gulp compatible. Specifiy the</span>\n          <span class=hljs-comment>// desired output filename here.</span>\n          .pipe(source(bundleConfig.bundleName))\n          <span class=hljs-comment>// buffer file contents</span>\n          .pipe(buffer())\n          <span class=hljs-comment>// (optional) sourcemaps</span>\n          <span class=hljs-comment>// loads map from browserify file</span>\n          .pipe($.<span class=hljs-keyword>if</span>(__SOURCEMAPS, $.sourcemaps.init({ loadMaps: <span class=hljs-literal>true</span> })))\n          <span class=hljs-comment>// Add transformation tasks to the pipeline here.</span>\n          <span class=hljs-comment>// (optional) Minify CSS</span>\n          .pipe($.<span class=hljs-keyword>if</span>(__MINIFY, $.rename({ extname: <span class=hljs-string>\'.min.js\'</span> })))\n          .pipe($.<span class=hljs-keyword>if</span>(__MINIFY, $.uglify()))\n          <span class=hljs-comment>// (optional) Write .map file</span>\n          .pipe($.<span class=hljs-keyword>if</span>(__SOURCEMAPS, $.sourcemaps.write(<span class=hljs-string>\'./\'</span>)))\n          <span class=hljs-comment>// Write JS file</span>\n          .pipe(gulp.dest(bundleConfig.dest))\n          .on(<span class=hljs-string>\'end\'</span>, reportFinished)\n      };\n\n      <span class=hljs-keyword>if</span> (global.__WATCHING) {\n        <span class=hljs-comment>// Wrap with watchify and rebundle on changes</span>\n        bundler = watchify(bundler);\n        <span class=hljs-comment>// Rebundle on update</span>\n        bundler.on(<span class=hljs-string>\'update\'</span>, bundle);\n      }\n\n      <span class=hljs-keyword>var</span> reportFinished = <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params></span>) </span>{\n        <span class=hljs-comment>// Log when bundling completes</span>\n        bundleLogger.end(path.join(bundleConfig.dest, bundleConfig.bundleName));\n\n        <span class=hljs-keyword>if</span> (bundleQueue) {\n          bundleQueue --;\n          <span class=hljs-keyword>if</span> (bundleQueue === <span class=hljs-number>0</span>) {\n            <span class=hljs-comment>// If queue is empty, tell gulp the task is complete.</span>\n            <span class=hljs-comment>// https://github.com/gulpjs/gulp/blob/master/docs/API.md#accept-a-callback</span>\n            callback();\n          }\n        }\n      };\n\n      <span class=hljs-keyword>return</span> bundle();\n    };\n\n    <span class=hljs-comment>// Start bundling source files with Browserify</span>\n    bundles.forEach(browserifyThis);\n  });\n});\n</code></pre> <h3 id=watch-browserify-bundles>Watch Browserify bundles</h3> <blockquote> <p>Watch Browserify source files and recompile on file changes.</p> </blockquote> <pre><code class=lang-js>gulp.task(<span class=hljs-string>\'browserify:watch\'</span>, [<span class=hljs-string>\'watch:set\'</span>], <span class=hljs-function><span class=hljs-keyword>function</span> <span class=hljs-params>()</span> </span>{\n  gulp.watch(__WATCH_BROWSERIFY, [<span class=hljs-string>\'browserify\'</span>]);\n});\n</code></pre> <h3 id=watch-task>Watch task</h3> <blockquote> <p>Enable all watcher tasks. Run with <code>gulp watch</code>.</p> </blockquote> <pre><code class=lang-js>gulp.task(<span class=hljs-symbol>\'watch\'</span>, [<span class=hljs-symbol>\'sass</span>:watch\', <span class=hljs-symbol>\'browserify</span>:watch\']);\n</code></pre> <h3 id=default-task>Default task</h3> <blockquote> <p>The default task defines what will be executed when running <code>gulp</code> without specifying a task name.</p> </blockquote> <pre><code class=lang-js>gulp.<span class=hljs-keyword>task</span>(<span class=hljs-string>\'default\'</span>, [<span class=hljs-string>\'sass\'</span>, <span class=hljs-string>\'browserify\'</span>]);\n</code></pre> <hr> <h2 id=project-assets>Project assets</h2> <blockquote> <p>Install adminplus and bootstrap (note jQuery and Tether are required by Bootstrap 4):</p> </blockquote> <pre><code class=lang-bash><span class=hljs-built_in>npm</span> install --save <span class=hljs-string>\\</span>\n    adminplus@<span class=hljs-number>1.0</span>.<span class=hljs-number>0</span>-alpha.<span class=hljs-number>10</span> <span class=hljs-string>\\</span>\n    bootstrap-layout@<span class=hljs-number>1.0</span>.<span class=hljs-number>0</span>-alpha.<span class=hljs-number>4</span> <span class=hljs-string>\\</span>\n    bootstrap@<span class=hljs-number>4.0</span>.<span class=hljs-number>0</span>-alpha.<span class=hljs-number>2</span> <span class=hljs-string>\\</span>\n    jquery@<span class=hljs-number>2</span> <span class=hljs-string>\\</span>\n    tether\n</code></pre> <h3 id=sass-color-variables>Sass color variables</h3> <blockquote> <p>For the purpose of customizing the colors, let&#39;s install <code>sass-md-colors</code>, a handy package which provides the Material Design Color Palette as Sass variables.</p> </blockquote> <pre><code class=lang-bash><span class=hljs-built_in>npm</span> install --save <span class=hljs-string>\\</span>\n    sass-md-colors\n</code></pre> <h3 id=src-sass-_variables-scss>src/sass/_variables.scss</h3> <pre><code class=lang-sass>// Color variables\n@<span class=hljs-keyword>import</span> <span class=hljs-string>\'sass-md-colors/colors/variables\'</span>;\n\n// Customize any variables here, before loading the <span class=hljs-keyword>default</span> variables\n$brand-primary: $red-400;\n\n// Default style\n@<span class=hljs-keyword>import</span> <span class=hljs-string>\'adminplus/src/sass/variables\'</span>;\n</code></pre> <h2 id=customizing-colors>Customizing colors</h2> <blockquote> <p>The following example will load both the default and custom variables from <code>src/sass/_variables.scss</code> and the default style from <code>adminplus/src/sass/style.scss</code>.</p> </blockquote> <h3 id=src-sass-app-scss>src/sass/app.scss</h3> <pre><code class=lang-sass><span class=hljs-comment>// Variables (default and custom)</span>\n@<span class=hljs-keyword>import</span> <span class=hljs-string>\'./variables\'</span>;\n\n<span class=hljs-comment>// Default AdminPlus Lite style (including Bootstrap)</span>\n@<span class=hljs-keyword>import</span> <span class=hljs-string>\'adminplus/src/sass/style\'</span>;\n</code></pre> <hr> <h2 id=javascript-bundle>JavaScript bundle</h2> <h3 id=src-js-app-browserify-js>src/js/app.browserify.js</h3> <pre><code class=lang-js><span class=hljs-comment>// Vendor libraries</span>\n<span class=hljs-comment>// jQuery</span>\n<span class=hljs-built_in>window</span>.$ = <span class=hljs-built_in>window</span>.jQuery = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'jquery\'</span>);\n\n<span class=hljs-comment>// Tether (required by Bootstrap 4)</span>\n<span class=hljs-built_in>window</span>.Tether = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'tether\'</span>);\n\n<span class=hljs-comment>// Bootstrap 4</span>\n<span class=hljs-built_in>require</span>(<span class=hljs-string>\'bootstrap\'</span>);\n\n<span class=hljs-comment>// AdminPlus Lite</span>\n<span class=hljs-keyword>var</span> AdminPlus = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'adminplus\'</span>);\n\n<span class=hljs-comment>// Initialize Sidebars</span>\nAdminPlus.Sidebar.init();\n\n<span class=hljs-comment>// Initialize Scrollbars</span>\nAdminPlus.Scrollable();\n</code></pre> <hr> <h2 id=html>HTML</h2> <blockquote> <p>Finally, to complete our simple project, let&#39;s create some HTML pages!</p> </blockquote> <h3 id=dist-index-html>dist/index.html</h3> <blockquote> <p>Fixed layout:</p> </blockquote> <pre><code class=lang-html><span class=hljs-meta>&lt;!DOCTYPE html&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>html</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"bootstrap-layout"</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>head</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>charset</span>=<span class=hljs-string>"utf-8"</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>http-equiv</span>=<span class=hljs-string>"X-UA-Compatible"</span> <span class=hljs-attr>content</span>=<span class=hljs-string>"IE=edge"</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>name</span>=<span class=hljs-string>"viewport"</span> <span class=hljs-attr>content</span>=<span class=hljs-string>"width=device-width, initial-scale=1"</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>title</span>&gt;</span>adminplus-boilerplate-gulp-advanced demo<span class=hljs-tag>&lt;/<span class=hljs-name>title</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Material Design Icons --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>link</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"https://fonts.googleapis.com/icon?family=Material+Icons"</span> <span class=hljs-attr>rel</span>=<span class=hljs-string>"stylesheet"</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Roboto Web Font --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>link</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"https://fonts.googleapis.com/css?family=Roboto:regular,bold,italic,thin,light,bolditalic,black,medium&amp;amp;lang=en"</span> <span class=hljs-attr>rel</span>=<span class=hljs-string>"stylesheet"</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- App CSS (includes Bootstrap) --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>link</span> <span class=hljs-attr>type</span>=<span class=hljs-string>"text/css"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"css/app.min.css"</span> <span class=hljs-attr>rel</span>=<span class=hljs-string>"stylesheet"</span>&gt;</span>\n\n<span class=hljs-tag>&lt;/<span class=hljs-name>head</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>body</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"layout-container ls-top-navbar"</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Navbar --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>nav</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar navbar-dark bg-primary navbar-full navbar-fixed-top"</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"container"</span>&gt;</span>\n\n      <span class=hljs-comment>&lt;!-- Navbar toggle --&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>button</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar-toggler hidden-md-up pull-xs-right last-child-xs"</span> <span class=hljs-attr>type</span>=<span class=hljs-string>"button"</span> <span class=hljs-attr>data-toggle</span>=<span class=hljs-string>"collapse"</span> <span class=hljs-attr>data-target</span>=<span class=hljs-string>"#navbar"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>span</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"material-icons"</span>&gt;</span>menu<span class=hljs-tag>&lt;/<span class=hljs-name>span</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>button</span>&gt;</span>\n\n      <span class=hljs-comment>&lt;!-- Brand --&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar-brand"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span>&gt;</span>Brand<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span>\n\n      <span class=hljs-comment>&lt;!-- Collapse --&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"collapse navbar-toggleable-xs"</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"navbar"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>ul</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav navbar-nav"</span>&gt;</span>\n          <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-item active"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-link"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span>&gt;</span>Fixed<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n          <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-item"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-link"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"sidebar.html"</span>&gt;</span>Sidebar<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n        <span class=hljs-tag>&lt;/<span class=hljs-name>ul</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n      <span class=hljs-comment>&lt;!-- // END Collapse --&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>nav</span>&gt;</span>\n  <span class=hljs-comment>&lt;!-- // END Navbar --&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Content --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"layout-content"</span> <span class=hljs-attr>data-scrollable</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"container"</span>&gt;</span>\n\n      <span class=hljs-comment>&lt;!-- Breadcrumb --&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>ol</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"breadcrumb"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>li</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span>&gt;</span>AdminPlus<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"active"</span>&gt;</span>Fixed layout<span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>ol</span>&gt;</span>\n      <span class=hljs-comment>&lt;!-- // END Breadcrumb --&gt;</span>\n\n      <span class=hljs-tag>&lt;<span class=hljs-name>h1</span>&gt;</span>Hello World<span class=hljs-tag>&lt;/<span class=hljs-name>h1</span>&gt;</span>\n\n      <span class=hljs-tag>&lt;<span class=hljs-name>p</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"lead"</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Repudiandae ea ullam iusto asperiores repellat perspiciatis error. Quo praesentium, expedita neque natus quisquam iure consequuntur unde hic doloribus ab voluptas pariatur!<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n\n      <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"card"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"card-block"</span>&gt;</span>\n          This is a demo for the <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>target</span>=<span class=hljs-string>"_blank"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"https://github.com/themekit/adminplus-boilerplate-gulp-advanced"</span>&gt;</span>adminplus-boilerplate-gulp-advanced<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span> repository. <span class=hljs-tag>&lt;<span class=hljs-name>br</span>&gt;</span>\n          Read the full guide <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>target</span>=<span class=hljs-string>"_blank"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"http://adminplus.themekit.io/gulp-advanced-workflow"</span>&gt;</span>Advanced gulp workflow<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span>.\n        <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-comment>&lt;!-- // END Content --&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- App JS (includes vendor assets) --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"js/app.browserify.min.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-tag>&lt;/<span class=hljs-name>body</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>html</span>&gt;</span>\n</code></pre> <h3 id=dist-sidebar-html>dist/sidebar.html</h3> <blockquote> <p>Sidebar layout:</p> </blockquote> <pre><code class=lang-html><span class=hljs-meta>&lt;!DOCTYPE html&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>html</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"bootstrap-layout"</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>head</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>charset</span>=<span class=hljs-string>"utf-8"</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>http-equiv</span>=<span class=hljs-string>"X-UA-Compatible"</span> <span class=hljs-attr>content</span>=<span class=hljs-string>"IE=edge"</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>name</span>=<span class=hljs-string>"viewport"</span> <span class=hljs-attr>content</span>=<span class=hljs-string>"width=device-width, initial-scale=1"</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>title</span>&gt;</span>adminplus-boilerplate-gulp-advanced demo<span class=hljs-tag>&lt;/<span class=hljs-name>title</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Material Design Icons --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>link</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"https://fonts.googleapis.com/icon?family=Material+Icons"</span> <span class=hljs-attr>rel</span>=<span class=hljs-string>"stylesheet"</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Roboto Web Font --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>link</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"https://fonts.googleapis.com/css?family=Roboto:regular,bold,italic,thin,light,bolditalic,black,medium&amp;amp;lang=en"</span> <span class=hljs-attr>rel</span>=<span class=hljs-string>"stylesheet"</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- App CSS (includes Bootstrap) --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>link</span> <span class=hljs-attr>type</span>=<span class=hljs-string>"text/css"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"css/app.min.css"</span> <span class=hljs-attr>rel</span>=<span class=hljs-string>"stylesheet"</span>&gt;</span>\n\n<span class=hljs-tag>&lt;/<span class=hljs-name>head</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>body</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"layout-container ls-top-navbar si-l3-md-up"</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Navbar --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>nav</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar navbar-light bg-white navbar-full navbar-fixed-top ls-left-sidebar"</span>&gt;</span>\n\n    <span class=hljs-comment>&lt;!-- Navbar toggle --&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>button</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar-toggler hidden-md-up pull-xs-right"</span> <span class=hljs-attr>type</span>=<span class=hljs-string>"button"</span> <span class=hljs-attr>data-toggle</span>=<span class=hljs-string>"collapse"</span> <span class=hljs-attr>data-target</span>=<span class=hljs-string>"#navbar"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>span</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"material-icons"</span>&gt;</span>menu<span class=hljs-tag>&lt;/<span class=hljs-name>span</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>button</span>&gt;</span>\n\n    <span class=hljs-comment>&lt;!-- Sidebar toggle --&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>button</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar-toggler pull-xs-left"</span> <span class=hljs-attr>type</span>=<span class=hljs-string>"button"</span> <span class=hljs-attr>data-toggle</span>=<span class=hljs-string>"sidebar"</span> <span class=hljs-attr>data-target</span>=<span class=hljs-string>"#sidebar"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>span</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"material-icons"</span>&gt;</span>menu<span class=hljs-tag>&lt;/<span class=hljs-name>span</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>button</span>&gt;</span>\n\n    <span class=hljs-comment>&lt;!-- Brand --&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>span</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar-brand"</span>&gt;</span>Sidebar layout<span class=hljs-tag>&lt;/<span class=hljs-name>span</span>&gt;</span>\n\n    <span class=hljs-comment>&lt;!-- Collapse --&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"collapse navbar-toggleable-xs"</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"navbar"</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>ul</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav navbar-nav"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-item"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-link"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span>&gt;</span>Fixed<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-item active"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-link"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"sidebar.html"</span>&gt;</span>Sidebar<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>ul</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-comment>&lt;!-- // END Collapse --&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>nav</span>&gt;</span>\n  <span class=hljs-comment>&lt;!-- // END Navbar --&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Sidebar --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar sidebar-left sidebar-visible-md-up si-si-3 sidebar-dark bg-primary"</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"sidebar"</span> <span class=hljs-attr>data-scrollable</span>&gt;</span>\n\n    <span class=hljs-comment>&lt;!-- Brand --&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-brand"</span>&gt;</span>Brand<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span>\n\n    <span class=hljs-comment>&lt;!-- Menu --&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>ul</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu sm-active-button-bg"</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu-item"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu-button"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>i</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu-icon material-icons"</span>&gt;</span>home<span class=hljs-tag>&lt;/<span class=hljs-name>i</span>&gt;</span> Fixed layout<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu-item active"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu-button"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"sidebar.html"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>i</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu-icon material-icons"</span>&gt;</span>menu<span class=hljs-tag>&lt;/<span class=hljs-name>i</span>&gt;</span> Sidebar layout<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>ul</span>&gt;</span>\n    <span class=hljs-comment>&lt;!-- // END Menu --&gt;</span>\n\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-comment>&lt;!-- // END Sidebar --&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Content --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"layout-content"</span> <span class=hljs-attr>data-scrollable</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"container-fluid"</span>&gt;</span>\n\n      <span class=hljs-comment>&lt;!-- Breadcrumb --&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>ol</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"breadcrumb"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>li</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span>&gt;</span>AdminPlus<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"active"</span>&gt;</span>Sidebar layout<span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>ol</span>&gt;</span>\n      <span class=hljs-comment>&lt;!-- // END Breadcrumb --&gt;</span>\n\n      <span class=hljs-tag>&lt;<span class=hljs-name>h1</span>&gt;</span>Hello World<span class=hljs-tag>&lt;/<span class=hljs-name>h1</span>&gt;</span>\n\n      <span class=hljs-tag>&lt;<span class=hljs-name>p</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"lead"</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Repudiandae ea ullam iusto asperiores repellat perspiciatis error. Quo praesentium, expedita neque natus quisquam iure consequuntur unde hic doloribus ab voluptas pariatur!<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n\n      <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"card"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"card-block"</span>&gt;</span>\n          This is a demo for the <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>target</span>=<span class=hljs-string>"_blank"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"https://github.com/themekit/adminplus-boilerplate-gulp-advanced"</span>&gt;</span>adminplus-boilerplate-gulp-advanced<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span> repository. <span class=hljs-tag>&lt;<span class=hljs-name>br</span>&gt;</span>\n          Read the full guide <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>target</span>=<span class=hljs-string>"_blank"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"http://adminplus.themekit.io/gulp-advanced-workflow"</span>&gt;</span>Advanced gulp workflow<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span>.\n        <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-comment>&lt;!-- // END Content --&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- App JS (includes vendor assets) --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"js/app.browserify.min.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-tag>&lt;/<span class=hljs-name>body</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>html</span>&gt;</span>\n</code></pre> <hr> <h2 id=build-project-assets>Build project assets</h2> <blockquote> <p>The following will create <code>dist/css/app.min.css</code> and <code>dist/js/app.browserify.min.js</code>:</p> </blockquote> <pre><code class=lang-bash>gulp\n</code></pre>';
},function(s,a){s.exports='<h1 id=simple-gulp-workflow-using-the-adminplus-lite-bootstrap-theme>Simple Gulp workflow using the AdminPlus Lite Bootstrap Theme</h1> <p>For this example, we are using Gulp as the primary build tool and we get to see how to work with the Sass source files provided with AdminPlus Lite.</p> <h3 id=code>Code</h3> <blockquote> <p>If you&#39;d rather see the complete code for this guide, clone the <a href=https://github.com/themekit/adminplus-boilerplate-gulp>adminplus-boilerplate-gulp</a> Github repository. </p> </blockquote> <h3 id=demo>Demo</h3> <blockquote> <p>You can also <a href=http://gulp.adminplus-boilerplate.themekit.io>see a working live demo</a> of the project we&#39;re builing in this guide.</p> </blockquote> <h3 id=features>Features</h3> <ul> <li>simple <a href=https://github.com/gulpjs/gulp>gulp</a> workflow</li> <li>compile Sass using <a href=https://github.com/dlmanning/gulp-sass>gulp-sass</a> (gulp wrapper for <a href=https://github.com/sass/node-sass>node-sass</a>)</li> <li>import Sass files directly from node_modules using <a href=https://github.com/themekit/sass-importer-npm>sass-importer-npm</a></li> <li>example of customizing AdminPlus Lite colors</li> </ul> <h3 id=advanced-boilerplate>Advanced boilerplate</h3> <p>Fore more advanced features such as file watchers, minify, browser vendor prefixes, browserify and more, see our <a href=docs/gulp-advanced-workflow.md>Advanced gulp workflow</a>.</p> <hr> <h2 id=boilerplate-usage>Boilerplate usage</h2> <blockquote> <p>You need to have gulp installed globally. Run <code>npm install -g gulp</code>.</p> </blockquote> <h4 id=clone-the-boilerplate-repository>Clone the boilerplate repository</h4> <pre><code class=lang-bash>git <span class=hljs-keyword>clone</span> <span class=hljs-title>\\ \n  https</span>://github.com/themekit/adminplus-boilerplate-gulp.git \\\n  my-project\n</code></pre> <pre><code class=lang-bash>cd <span class=hljs-keyword>my</span>-project\n</code></pre> <h4 id=install-dependencies>Install dependencies</h4> <pre><code class=lang-bash>npm <span class=hljs-keyword>install</span>\n</code></pre> <h4 id=build>Build</h4> <pre><code class=lang-bash>gulp\n</code></pre> <hr> <h2 id=project-structure>Project structure</h2> <blockquote> <p>Our final project structure will look like this:</p> </blockquote> <pre><code>├── dist\n│   ├── index<span class=hljs-selector-class>.html</span>\n│   ├── sidebar<span class=hljs-selector-class>.html</span>\n│   ├── css\n│   │   └── app<span class=hljs-selector-class>.css</span>\n│   ├── js\n│   │   └── app<span class=hljs-selector-class>.js</span>\n│   └── vendor\n│       ├── adminplus<span class=hljs-selector-class>.js</span>\n│       ├── bootstrap<span class=hljs-selector-class>.min</span><span class=hljs-selector-class>.js</span>\n│       ├── jquery<span class=hljs-selector-class>.min</span><span class=hljs-selector-class>.js</span>\n│       └── tether<span class=hljs-selector-class>.min</span><span class=hljs-selector-class>.js</span>\n├── gulpfile<span class=hljs-selector-class>.js</span>\n├── package<span class=hljs-selector-class>.json</span>\n├── node_modules\n└── src\n    └── sass\n        ├── _variables<span class=hljs-selector-class>.scss</span>\n        └── app.scss\n</code></pre><h2 id=setup>Setup</h2> <h3 id=gulp>Gulp</h3> <blockquote> <p>Before we go into project specific setup details, make sure you install gulp globally:</p> </blockquote> <pre><code class=lang-bash>npm <span class=hljs-keyword>install</span> -<span class=hljs-keyword>g</span> gulp\n</code></pre> <h2 id=package-json>package.json</h2> <blockquote> <p>Create a package.json file in order to save the project dependencies. Run <code>npm init</code> from your project directory.</p> </blockquote> <h2 id=project-dependencies>Project dependencies</h2> <blockquote> <p>Install adminplus and it&#39;s dependencies (note jQuery and Tether are required by Bootstrap 4):</p> </blockquote> <pre><code class=lang-bash><span class=hljs-built_in>npm</span> install --save <span class=hljs-string>\\</span>\n    adminplus@<span class=hljs-number>1.0</span>.<span class=hljs-number>0</span>-alpha.<span class=hljs-number>10</span> <span class=hljs-string>\\</span>\n    bootstrap-layout@<span class=hljs-number>1.0</span>.<span class=hljs-number>0</span>-alpha.<span class=hljs-number>4</span> <span class=hljs-string>\\</span>\n    bootstrap@<span class=hljs-number>4.0</span>.<span class=hljs-number>0</span>-alpha.<span class=hljs-number>2</span> <span class=hljs-string>\\</span>\n    jquery@<span class=hljs-number>2</span> <span class=hljs-string>\\</span>\n    tether\n</code></pre> <h3 id=dev-tools>Dev tools</h3> <blockquote> <p>Install dev dependencies:</p> </blockquote> <pre><code class=lang-bash><span class=hljs-built_in>npm</span> install --save-dev <span class=hljs-string>\\</span>\n    gulp <span class=hljs-string>\\</span>\n    gulp-sass <span class=hljs-string>\\</span>\n    sass-importer-<span class=hljs-built_in>npm</span>\n</code></pre> <h3 id=gulpfile-js>gulpfile.js</h3> <pre><code class=lang-js><span class=hljs-keyword>var</span> gulp = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'gulp\'</span>);\n<span class=hljs-keyword>var</span> sass = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'gulp-sass\'</span>);\n<span class=hljs-keyword>var</span> importer = <span class=hljs-built_in>require</span>(<span class=hljs-string>\'sass-importer-npm\'</span>);\n\ngulp.task(<span class=hljs-string>\'sass\'</span>, <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params></span>) </span>{\n  <span class=hljs-keyword>return</span> gulp.src(<span class=hljs-string>\'./src/sass/**/*.scss\'</span>)\n    .pipe(sass({ importer: importer }).on(<span class=hljs-string>\'error\'</span>, sass.logError))\n    .pipe(gulp.dest(<span class=hljs-string>\'./dist/css\'</span>));\n});\n\ngulp.task(<span class=hljs-string>\'copy-vendor\'</span>, <span class=hljs-function><span class=hljs-keyword>function</span> (<span class=hljs-params></span>) </span>{\n  <span class=hljs-keyword>return</span> gulp.src([\n    <span class=hljs-string>\'adminplus/dist/adminplus.js\'</span>,\n    <span class=hljs-string>\'bootstrap/dist/js/bootstrap.min.js\'</span>,\n    <span class=hljs-string>\'jquery/dist/jquery.min.js\'</span>,\n    <span class=hljs-string>\'tether/dist/js/tether.min.js\'</span>,\n  ], {\n    cwd: <span class=hljs-string>\'node_modules\'</span>\n  })\n  .pipe(gulp.dest(<span class=hljs-string>\'./dist/vendor\'</span>));\n});\n\ngulp.task(<span class=hljs-string>\'default\'</span>, [<span class=hljs-string>\'copy-vendor\'</span>, <span class=hljs-string>\'sass\'</span>]);\n</code></pre> <hr> <h2 id=sass>Sass</h2> <blockquote> <p>For the purpose of customizing the colors, let&#39;s install <code>sass-md-colors</code>, a handy package which provides the Material Design Color Palette as Sass variables.</p> </blockquote> <pre><code class=lang-bash><span class=hljs-built_in>npm</span> install --save <span class=hljs-string>\\</span>\n    sass-md-colors\n</code></pre> <h3 id=src-sass-_variables-scss>src/sass/_variables.scss</h3> <pre><code class=lang-sass>// Color variables\n@<span class=hljs-keyword>import</span> <span class=hljs-string>\'sass-md-colors/colors/variables\'</span>;\n\n// Customize any variables here, before loading the <span class=hljs-keyword>default</span> variables\n$brand-primary: $deep-purple-400;\n\n// Default style\n@<span class=hljs-keyword>import</span> <span class=hljs-string>\'adminplus/src/sass/variables\'</span>;\n</code></pre> <h2 id=customizing-colors>Customizing colors</h2> <blockquote> <p>The following example will load both the default and custom variables from <code>src/sass/_variables.scss</code> and the default style from <code>adminplus/src/sass/style.scss</code>.</p> </blockquote> <h3 id=src-sass-app-scss>src/sass/app.scss</h3> <pre><code class=lang-sass><span class=hljs-comment>// Variables (default and custom)</span>\n@<span class=hljs-keyword>import</span> <span class=hljs-string>\'./variables\'</span>;\n\n<span class=hljs-comment>// Default AdminPlus Lite style (including Bootstrap)</span>\n@<span class=hljs-keyword>import</span> <span class=hljs-string>\'adminplus/src/sass/style\'</span>;\n</code></pre> <hr> <h2 id=scripts>Scripts</h2> <h3 id=dist-js-app-js>dist/js/app.js</h3> <blockquote> <p>This file will simply initialize the sidebar and scrollbars.</p> </blockquote> <pre><code class=lang-js><span class=hljs-comment>// Initialize Sidebar</span>\nAdminPlus<span class=hljs-selector-class>.Sidebar</span><span class=hljs-selector-class>.init</span>()\n\n<span class=hljs-comment>// Initialize Scrollbars</span>\nAdminPlus.Scrollable()\n</code></pre> <hr> <h2 id=html>HTML</h2> <blockquote> <p>Finally, to complete our simple project, let&#39;s create some HTML pages!</p> </blockquote> <h3 id=dist-index-html>dist/index.html</h3> <blockquote> <p>Fixed layout:</p> </blockquote> <pre><code class=lang-html><span class=hljs-meta>&lt;!DOCTYPE html&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>html</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"bootstrap-layout"</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>head</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>charset</span>=<span class=hljs-string>"utf-8"</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>http-equiv</span>=<span class=hljs-string>"X-UA-Compatible"</span> <span class=hljs-attr>content</span>=<span class=hljs-string>"IE=edge"</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>name</span>=<span class=hljs-string>"viewport"</span> <span class=hljs-attr>content</span>=<span class=hljs-string>"width=device-width, initial-scale=1"</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>title</span>&gt;</span>adminplus-boilerplate-gulp demo<span class=hljs-tag>&lt;/<span class=hljs-name>title</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Material Design Icons --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>link</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"https://fonts.googleapis.com/icon?family=Material+Icons"</span> <span class=hljs-attr>rel</span>=<span class=hljs-string>"stylesheet"</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Roboto Web Font --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>link</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"https://fonts.googleapis.com/css?family=Roboto:regular,bold,italic,thin,light,bolditalic,black,medium&amp;amp;lang=en"</span> <span class=hljs-attr>rel</span>=<span class=hljs-string>"stylesheet"</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- App CSS (includes Bootstrap) --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>link</span> <span class=hljs-attr>type</span>=<span class=hljs-string>"text/css"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"css/app.css"</span> <span class=hljs-attr>rel</span>=<span class=hljs-string>"stylesheet"</span>&gt;</span>\n\n<span class=hljs-tag>&lt;/<span class=hljs-name>head</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>body</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"layout-container ls-top-navbar"</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Navbar --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>nav</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar navbar-dark bg-primary navbar-full navbar-fixed-top"</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"container"</span>&gt;</span>\n\n      <span class=hljs-comment>&lt;!-- Navbar toggle --&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>button</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar-toggler hidden-md-up pull-xs-right last-child-xs"</span> <span class=hljs-attr>type</span>=<span class=hljs-string>"button"</span> <span class=hljs-attr>data-toggle</span>=<span class=hljs-string>"collapse"</span> <span class=hljs-attr>data-target</span>=<span class=hljs-string>"#navbar"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>span</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"material-icons"</span>&gt;</span>menu<span class=hljs-tag>&lt;/<span class=hljs-name>span</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>button</span>&gt;</span>\n\n      <span class=hljs-comment>&lt;!-- Brand --&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar-brand"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span>&gt;</span>Brand<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span>\n\n      <span class=hljs-comment>&lt;!-- Collapse --&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"collapse navbar-toggleable-xs"</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"navbar"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>ul</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav navbar-nav"</span>&gt;</span>\n          <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-item active"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-link"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span>&gt;</span>Fixed<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n          <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-item"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-link"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"sidebar.html"</span>&gt;</span>Sidebar<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n        <span class=hljs-tag>&lt;/<span class=hljs-name>ul</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n      <span class=hljs-comment>&lt;!-- // END Collapse --&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>nav</span>&gt;</span>\n  <span class=hljs-comment>&lt;!-- // END Navbar --&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Content --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"layout-content"</span> <span class=hljs-attr>data-scrollable</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"container"</span>&gt;</span>\n\n      <span class=hljs-comment>&lt;!-- Breadcrumb --&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>ol</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"breadcrumb"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>li</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span>&gt;</span>AdminPlus<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"active"</span>&gt;</span>Fixed layout<span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>ol</span>&gt;</span>\n      <span class=hljs-comment>&lt;!-- // END Breadcrumb --&gt;</span>\n\n      <span class=hljs-tag>&lt;<span class=hljs-name>h1</span>&gt;</span>Hello World<span class=hljs-tag>&lt;/<span class=hljs-name>h1</span>&gt;</span>\n\n      <span class=hljs-tag>&lt;<span class=hljs-name>p</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"lead"</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Repudiandae ea ullam iusto asperiores repellat perspiciatis error. Quo praesentium, expedita neque natus quisquam iure consequuntur unde hic doloribus ab voluptas pariatur!<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n\n      <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"card"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"card-block"</span>&gt;</span>\n          This is a demo for the <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>target</span>=<span class=hljs-string>"_blank"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"https://github.com/themekit/adminplus-boilerplate-gulp"</span>&gt;</span>adminplus-boilerplate-gulp<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span> repository. <span class=hljs-tag>&lt;<span class=hljs-name>br</span>&gt;</span>\n          Read the full guide <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>target</span>=<span class=hljs-string>"_blank"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"http://adminplus.themekit.io/gulp-simple-workflow"</span>&gt;</span>Simple Gulp Workflow using AdminPlus<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span>.\n        <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-comment>&lt;!-- // END Content --&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- jQuery --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"vendor/jquery.min.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Bootstrap --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"vendor/tether.min.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"vendor/bootstrap.min.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- AdminPlus --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"vendor/adminplus.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- App --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"js/app.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-tag>&lt;/<span class=hljs-name>body</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>html</span>&gt;</span>\n</code></pre> <h3 id=dist-sidebar-html>dist/sidebar.html</h3> <blockquote> <p>Sidebar layout:</p> </blockquote> <pre><code class=lang-html><span class=hljs-meta>&lt;!DOCTYPE html&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>html</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"bootstrap-layout"</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>head</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>charset</span>=<span class=hljs-string>"utf-8"</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>http-equiv</span>=<span class=hljs-string>"X-UA-Compatible"</span> <span class=hljs-attr>content</span>=<span class=hljs-string>"IE=edge"</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>meta</span> <span class=hljs-attr>name</span>=<span class=hljs-string>"viewport"</span> <span class=hljs-attr>content</span>=<span class=hljs-string>"width=device-width, initial-scale=1"</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>title</span>&gt;</span>adminplus-boilerplate-gulp demo<span class=hljs-tag>&lt;/<span class=hljs-name>title</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Material Design Icons --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>link</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"https://fonts.googleapis.com/icon?family=Material+Icons"</span> <span class=hljs-attr>rel</span>=<span class=hljs-string>"stylesheet"</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Roboto Web Font --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>link</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"https://fonts.googleapis.com/css?family=Roboto:regular,bold,italic,thin,light,bolditalic,black,medium&amp;amp;lang=en"</span> <span class=hljs-attr>rel</span>=<span class=hljs-string>"stylesheet"</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- App CSS (includes Bootstrap) --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>link</span> <span class=hljs-attr>type</span>=<span class=hljs-string>"text/css"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"css/app.css"</span> <span class=hljs-attr>rel</span>=<span class=hljs-string>"stylesheet"</span>&gt;</span>\n\n<span class=hljs-tag>&lt;/<span class=hljs-name>head</span>&gt;</span>\n<span class=hljs-tag>&lt;<span class=hljs-name>body</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"layout-container ls-top-navbar si-l3-md-up"</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Navbar --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>nav</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar navbar-light bg-white navbar-full navbar-fixed-top ls-left-sidebar"</span>&gt;</span>\n\n    <span class=hljs-comment>&lt;!-- Navbar toggle --&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>button</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar-toggler hidden-md-up pull-xs-right"</span> <span class=hljs-attr>type</span>=<span class=hljs-string>"button"</span> <span class=hljs-attr>data-toggle</span>=<span class=hljs-string>"collapse"</span> <span class=hljs-attr>data-target</span>=<span class=hljs-string>"#navbar"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>span</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"material-icons"</span>&gt;</span>menu<span class=hljs-tag>&lt;/<span class=hljs-name>span</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>button</span>&gt;</span>\n\n    <span class=hljs-comment>&lt;!-- Sidebar toggle --&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>button</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar-toggler pull-xs-left"</span> <span class=hljs-attr>type</span>=<span class=hljs-string>"button"</span> <span class=hljs-attr>data-toggle</span>=<span class=hljs-string>"sidebar"</span> <span class=hljs-attr>data-target</span>=<span class=hljs-string>"#sidebar"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>span</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"material-icons"</span>&gt;</span>menu<span class=hljs-tag>&lt;/<span class=hljs-name>span</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>button</span>&gt;</span>\n\n    <span class=hljs-comment>&lt;!-- Brand --&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>span</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"navbar-brand"</span>&gt;</span>Sidebar layout<span class=hljs-tag>&lt;/<span class=hljs-name>span</span>&gt;</span>\n\n    <span class=hljs-comment>&lt;!-- Collapse --&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"collapse navbar-toggleable-xs"</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"navbar"</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>ul</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav navbar-nav"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-item"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-link"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span>&gt;</span>Fixed<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-item active"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"nav-link"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"sidebar.html"</span>&gt;</span>Sidebar<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>ul</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n    <span class=hljs-comment>&lt;!-- // END Collapse --&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>nav</span>&gt;</span>\n  <span class=hljs-comment>&lt;!-- // END Navbar --&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Sidebar --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar sidebar-left si-si-3 sidebar-visible-md-up sidebar-dark bg-primary"</span> <span class=hljs-attr>id</span>=<span class=hljs-string>"sidebar"</span> <span class=hljs-attr>data-scrollable</span>&gt;</span>\n\n    <span class=hljs-comment>&lt;!-- Brand --&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-brand"</span>&gt;</span>Brand<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span>\n\n    <span class=hljs-comment>&lt;!-- Menu --&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>ul</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu sm-active-button-bg"</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu-item"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu-button"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>i</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu-icon material-icons"</span>&gt;</span>home<span class=hljs-tag>&lt;/<span class=hljs-name>i</span>&gt;</span> Fixed layout<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu-item active"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu-button"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"sidebar.html"</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>i</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"sidebar-menu-icon material-icons"</span>&gt;</span>menu<span class=hljs-tag>&lt;/<span class=hljs-name>i</span>&gt;</span> Sidebar layout<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n    <span class=hljs-tag>&lt;/<span class=hljs-name>ul</span>&gt;</span>\n    <span class=hljs-comment>&lt;!-- // END Menu --&gt;</span>\n\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-comment>&lt;!-- // END Sidebar --&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Content --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"layout-content"</span> <span class=hljs-attr>data-scrollable</span>&gt;</span>\n    <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"container-fluid"</span>&gt;</span>\n\n      <span class=hljs-comment>&lt;!-- Breadcrumb --&gt;</span>\n      <span class=hljs-tag>&lt;<span class=hljs-name>ol</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"breadcrumb"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>li</span>&gt;</span><span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"index.html"</span>&gt;</span>AdminPlus<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span><span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>li</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"active"</span>&gt;</span>Sidebar layout<span class=hljs-tag>&lt;/<span class=hljs-name>li</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>ol</span>&gt;</span>\n      <span class=hljs-comment>&lt;!-- // END Breadcrumb --&gt;</span>\n\n      <span class=hljs-tag>&lt;<span class=hljs-name>h1</span>&gt;</span>Hello World<span class=hljs-tag>&lt;/<span class=hljs-name>h1</span>&gt;</span>\n\n      <span class=hljs-tag>&lt;<span class=hljs-name>p</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"lead"</span>&gt;</span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Repudiandae ea ullam iusto asperiores repellat perspiciatis error. Quo praesentium, expedita neque natus quisquam iure consequuntur unde hic doloribus ab voluptas pariatur!<span class=hljs-tag>&lt;/<span class=hljs-name>p</span>&gt;</span>\n\n      <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"card"</span>&gt;</span>\n        <span class=hljs-tag>&lt;<span class=hljs-name>div</span> <span class=hljs-attr>class</span>=<span class=hljs-string>"card-block"</span>&gt;</span>\n          This is a demo for the <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>target</span>=<span class=hljs-string>"_blank"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"https://github.com/themekit/adminplus-boilerplate-gulp"</span>&gt;</span>adminplus-boilerplate-gulp<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span> repository. <span class=hljs-tag>&lt;<span class=hljs-name>br</span>&gt;</span>\n          Read the full guide <span class=hljs-tag>&lt;<span class=hljs-name>a</span> <span class=hljs-attr>target</span>=<span class=hljs-string>"_blank"</span> <span class=hljs-attr>href</span>=<span class=hljs-string>"http://adminplus.themekit.io/gulp-simple-workflow"</span>&gt;</span>Simple Gulp Workflow using AdminPlus<span class=hljs-tag>&lt;/<span class=hljs-name>a</span>&gt;</span>.\n        <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n      <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n\n    <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-tag>&lt;/<span class=hljs-name>div</span>&gt;</span>\n  <span class=hljs-comment>&lt;!-- // END Content --&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- jQuery --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"vendor/jquery.min.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- Bootstrap --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"vendor/tether.min.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"vendor/bootstrap.min.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- AdminPlus --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"vendor/adminplus.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n  <span class=hljs-comment>&lt;!-- App --&gt;</span>\n  <span class=hljs-tag>&lt;<span class=hljs-name>script</span> <span class=hljs-attr>src</span>=<span class=hljs-string>"js/app.js"</span>&gt;</span><span class=undefined></span><span class=hljs-tag>&lt;/<span class=hljs-name>script</span>&gt;</span>\n\n<span class=hljs-tag>&lt;/<span class=hljs-name>body</span>&gt;</span>\n<span class=hljs-tag>&lt;/<span class=hljs-name>html</span>&gt;</span>\n</code></pre> <hr> <h2 id=build-the-project>Build the project</h2> <blockquote> <p>The following will create <code>dist/css/app.css</code>, <code>dist/js/app.js</code> and copy vendor assets from <code>node_modules</code> to <code>dist/vendor</code>:</p> </blockquote> <pre><code class=lang-bash>gulp\n</code></pre>';
},function(s,a){s.exports='<h1 id=adminplus-lite-bootstrap-theme>AdminPlus Lite Bootstrap Theme</h1> <p><a href=https://badge.fury.io/js/adminplus><img src=https://badge.fury.io/js/adminplus.svg alt="npm version"></a></p> <p>AdminPlus Lite is a free, clean and modern Bootstrap Theme, easy to use in any Bootstrap project. Extends Bootstrap 4 with awesome premium features, custom elements and sidebar navigation.</p> <p><img src=https://image-tf.s3.envato.com/files/171402185/preview.__large_preview.png alt="AdminPlus - Bootstrap 4 Admin Template"></p> <h2 id=demos>Demos</h2> <p>See <a href=http://adminplus.themekit.io/demo>AdminPlus Lite Demo</a> and <a href="http://themeforest.net/item/adminplus-bootstrap-4-admin-dashboard/full_screen_preview/14601290?ref=mosaicpro">AdminPlus Premium Demo</a></p> <blockquote> <p>While AdminPlus Lite is free, there are <em>premium extras available</em> such as custom dashboard designs, custom components, custom pages, integration samples with various 3rd party plugins, dedicated support from our team and more!</p> </blockquote> <hr> <h2 id=getting-started>Getting started</h2> <p>AdminPlus Lite provides a variety of guides and starter boilerplates for commonly used workflows and tooling such as npm, gulp, browserify and webpack. </p> <p><strong>Basic usage (npm)</strong><br/> <a href=https://github.com/themekit/adminplus-boilerplate-npm>boilerplate code</a> | <a href="http://npm.adminplus-boilerplate.themekit.io/">boilerplate demo</a> | <a href=basic-usage.md>guide</a></p> <p><strong>Simple gulp workflow</strong><br/> <a href=https://github.com/themekit/adminplus-boilerplate-gulp>boilerplate code</a> | <a href="http://gulp.adminplus-boilerplate.themekit.io/">boilerplate demo</a> | <a href=gulp-simple-workflow.md>guide</a></p> <p><strong>Advanced gulp workflow</strong><br/> <a href=https://github.com/themekit/adminplus-boilerplate-gulp-advanced>boilerplate code</a> | <a href="http://gulp-advanced.adminplus-boilerplate.themekit.io/">boilerplate demo</a> | <a href=gulp-advanced-workflow.md>guide</a></p> <p><strong>Laravel app</strong><br/> <a href=https://github.com/themekit/adminplus-boilerplate-laravel>boilerplate code</a> | <a href=http://polar-fjord-74422.herokuapp.com>boilerplate demo</a> | <a href=laravel.md>guide</a></p> <hr> <h2 id=get-help>Get help</h2> <p>Get help directly from our team via our Slack channel. <a href="http://themekit-slack-invite.stamplayapp.com/">Request invite</a></p>'},function(s,a){s.exports='<h1 id=laravel-app-boilerplate-using-adminplus-lite-bootstrap-theme>Laravel app boilerplate using AdminPlus Lite Bootstrap Theme</h1> <p>For this example we get to see how to work with AdminPlus Lite in the context of a <a href=https://laravel.com>Laravel</a> application.</p> <h3 id=code>Code</h3> <blockquote> <p>See <a href=https://github.com/themekit/adminplus-boilerplate-laravel>adminplus-boilerplate-laravel</a> on Github for the complete code.</p> </blockquote> <h4 id=demo>Demo</h4> <blockquote> <p>You can also <a href=http://polar-fjord-74422.herokuapp.com>see a working live demo</a> of the Laravel app boilerplate running on Heroku.</p> </blockquote> <h3 id=features>Features</h3> <ul> <li>use the Laravel recommended <a href=https://github.com/gulpjs/gulp>gulp</a> workflow with <a href=https://github.com/laravel/elixir>Laravel Elixir</a></li> <li>import Sass files directly from node_modules using <a href=https://github.com/themekit/sass-importer-npm>sass-importer-npm</a></li> <li>leverage <a href=https://github.com/substack/node-browserify>browserify</a> module system to bundle external vendor scripts and app scripts into a single JavaScript file</li> <li>customize AdminPlus Lite Sass colors</li> <li>create layouts, pages and partials using Laravel <a href=https://laravel.com/docs/master/blade>Blade Templates</a></li> <li>deploy a Laravel app using <a href=https://www.docker.com>Docker</a> containers</li> <li>deploy a Laravel app using <a href=https://www.heroku.com>Heroku</a></li> </ul> <hr> <h2 id=boilerplate-usage>Boilerplate usage</h2> <h3 id=clone-the-boilerplate-repository>Clone the boilerplate repository</h3> <pre><code class=lang-bash>git <span class=hljs-keyword>clone</span> <span class=hljs-title>\\ \n    https</span>://github.com/themekit/adminplus-boilerplate-laravel.git \\\n    my-project\n</code></pre> <pre><code class=lang-bash>cd <span class=hljs-keyword>my</span>-project\n</code></pre> <h3 id=install-dependencies>Install dependencies</h3> <pre><code class=lang-bash>composer <span class=hljs-keyword>install</span> &amp;&amp; npm <span class=hljs-keyword>install</span>\n</code></pre> <h3 id=build-assets>Build assets</h3> <pre><code class=lang-bash>gulp\n</code></pre> <hr> <h2 id=files-of-interest>Files of interest</h2> <blockquote> <p>The complete list of files modified or created in addition to the default Laravel installation.</p> </blockquote> <pre><code>├── Dockerfile\n├── Procfile\n├── app\n│   └── Http\n│       └── routes<span class=hljs-selector-class>.php</span>\n├── app<span class=hljs-selector-class>.json</span>\n├── composer<span class=hljs-selector-class>.json</span>\n├── docker-compose<span class=hljs-selector-class>.yml</span>\n├── gulpfile<span class=hljs-selector-class>.js</span>\n├── heroku<span class=hljs-selector-class>.nginx</span><span class=hljs-selector-class>.conf</span>\n├── package<span class=hljs-selector-class>.json</span>\n├── public\n│   ├── css\n│   │   ├── app<span class=hljs-selector-class>.css</span>\n│   │   └── app<span class=hljs-selector-class>.css</span><span class=hljs-selector-class>.map</span>\n│   └── js\n│       ├── main<span class=hljs-selector-class>.js</span>\n│       └── main<span class=hljs-selector-class>.js</span><span class=hljs-selector-class>.map</span>\n└── resources\n    ├── assets\n    │   ├── js\n    │   │   └── main<span class=hljs-selector-class>.js</span>\n    │   └── sass\n    │       ├── _variables<span class=hljs-selector-class>.scss</span>\n    │       └── app<span class=hljs-selector-class>.scss</span>\n    └── views\n        ├── includes\n        │   ├── <span class=hljs-attribute>content</span><span class=hljs-selector-class>.blade</span><span class=hljs-selector-class>.php</span>\n        │   └── head<span class=hljs-selector-class>.blade</span><span class=hljs-selector-class>.php</span>\n        ├── layouts\n        │   ├── fixed<span class=hljs-selector-class>.blade</span><span class=hljs-selector-class>.php</span>\n        │   └── fluid<span class=hljs-selector-class>.blade</span><span class=hljs-selector-class>.php</span>\n        ├── sidebar<span class=hljs-selector-class>.blade</span><span class=hljs-selector-class>.php</span>\n        └── welcome<span class=hljs-selector-class>.blade</span><span class=hljs-selector-class>.php</span>\n</code></pre><hr> <h2 id=running-the-laravel-app-on-heroku>Running the Laravel app on Heroku</h2> <blockquote> <p>First, get a free Heroku Account and download the <a href=https://toolbelt.heroku.com>Heroku Toolbelt</a>. Then, login to Heroku:</p> </blockquote> <pre><code class=lang-bash><span class=hljs-attribute>heroku</span> login\n</code></pre> <blockquote> <p>From the project root directory, create a Heroku app. Note that Heroku generates a random name for your app or you can pass parameter to specify your own app name.</p> </blockquote> <pre><code class=lang-bash>heroku <span class=hljs-keyword>create</span>\n</code></pre> <blockquote> <p>Configure the Heroku app to use the official PHP buildpack:</p> </blockquote> <pre><code class=lang-bash>heroku buildpacks:<span class=hljs-keyword>set</span> heroku/php\n</code></pre> <h4 id=deploy>Deploy</h4> <blockquote> <p>When you created the app with <code>heroku create</code>, a git remote (called <code>heroku</code>) was also created and associated with your local git repository. To publish the application, you simply have to push to that remote:</p> </blockquote> <pre><code class=lang-bash><span class=hljs-symbol>git</span> <span class=hljs-keyword>push </span>heroku master\n</code></pre> <blockquote> <p>Ensure at least one instance of the application is running:</p> </blockquote> <pre><code class=lang-bash><span class=hljs-attr>heroku ps:scale web</span>=<span class=hljs-string>1</span>\n</code></pre> <p>Visit <code>http://&lt;APP NAME&gt;.herokuapp.com</code> in your browser to see the Laravel app running.</p> <p>-- </p> <h2 id=running-the-laravel-app-with-docker>Running the Laravel app with Docker</h2> <p>Docker runs any app, anywhere and allows you to package an application with all of its dependencies into a standardized unit for development and compose your application from microservices, without worrying about inconsistencies between development and production environments. Learn more about <a href=https://www.docker.com>Docker</a></p> <h3 id=1-setup-docker>1. Setup docker</h3> <blockquote> <p>The easiest way to get started with docker is by using <code>docker-machine</code> and <code>docker-compose</code>. The rest of this guide assumes you already have both installed.</p> </blockquote> <h4 id=create-a-docker-machine>Create a docker machine</h4> <pre><code class=lang-bash>docker-machine <span class=hljs-keyword>create</span> dev\n</code></pre> <h4 id=start-the-docker-machine>Start the docker machine</h4> <pre><code class=lang-bash>docker-machine <span class=hljs-literal>start</span> dev\n</code></pre> <h4 id=setup-environment>Setup environment</h4> <blockquote> <p>Point the local <code>docker</code> client to run commands against the <code>dev</code> docker machine:</p> </blockquote> <pre><code class=lang-bash><span class=hljs-built_in>eval</span> <span class=hljs-string>"<span class=hljs-variable>$(docker-machine env dev)</span>"</span>\n</code></pre> <h3 id=2-mounting-the-host-directory>2. Mounting the host directory</h3> <blockquote> <p>This step is required to be able to change the source code and see its effect on the application in real time in the running docker container.</p> </blockquote> <h4 id=docker-compose-yml>docker-compose.yml</h4> <blockquote> <p>Update the volume path from <code>docker-compose.yml</code>:</p> </blockquote> <p><strong>For Linux</strong>:</p> <pre><code class=lang-yaml>volumes:\n  -<span class=ruby> .<span class=hljs-symbol>:/app/www</span></span>\n</code></pre> <p><strong>For OS X</strong>:</p> <pre><code class=lang-yaml><span class=hljs-symbol>volumes:</span>\n  - <span class=hljs-regexp>/Users/</span>&lt;YOUR USERNAME&gt;<span class=hljs-regexp>/docker/</span>&lt;YOUR PROJECT NAME&gt;<span class=hljs-symbol>:/app/www</span>\n</code></pre> <blockquote> <p>If you are using Docker Machine on Mac or Windows, your Docker daemon has only limited access to your OS X or Windows filesystem. Docker Machine tries to auto-share your /Users (OS X) or C:\\Users (Windows) directory. </p> </blockquote> <p><strong>For Windows</strong>:</p> <pre><code class=lang-yaml><span class=hljs-symbol>volumes:</span>\n  - <span class=hljs-meta-keyword>/c/</span>Users/<span class=hljs-params>&lt;YOUR USERNAME&gt;</span><span class=hljs-meta-keyword>/docker/</span><span class=hljs-params>&lt;YOUR PROJECT NAME&gt;</span>:<span class=hljs-meta-keyword>/app/</span>www\n</code></pre> <h3 id=3-start-docker-container>3. Start docker container</h3> <blockquote> <p>From the root directory of this repository:</p> </blockquote> <pre><code class=lang-bash>docker-compose up <span class=hljs-_>-d</span>\n</code></pre> <h3 id=4-attach-to-the-running-container>4. Attach to the running container</h3> <blockquote> <p>The previous command should start a container i.e. <code>myproject_web_1</code> but the name could be different. You can verify with <code>docker ps</code>. Assuming it&#39;s <code>myproject_web_1</code>:</p> </blockquote> <pre><code class=lang-bash>docker exec -<span class=hljs-keyword>it</span> myproject_web_1 bash\n</code></pre> <h3 id=5-open-the-laravel-app-in-your-browser>5. Open the Laravel app in your browser</h3> <blockquote> <p>After starting the container, to see the Laravel app running in your browser you only need to obtain the docker machine IP address and access <code>http://DOCKER_MACHINE_IP</code>. You can get the IP by running:</p> </blockquote> <pre><code class=lang-bash><span class=hljs-symbol>docker</span>-machine <span class=hljs-built_in>ip</span> dev\n</code></pre> <hr> <h2 id=laravel-documentation>Laravel documentation</h2> <p>Documentation for the Laravel framework can be found on the <a href=http://laravel.com/docs>Laravel website</a>.</p>'},function(s,a){s.exports="<h1 id=local-development>Local development</h1> <p>This guide refers to local development with the AdminPlus Lite library, which is common if you&#39;re looking to contribute or customize the source. If you&#39;re looking for instructions on how to use AdminPlus Lite in your project, see <a href=home.md#getting-started>Getting started</a>.</p> <hr> <h3 id=clone-or-fork-repository>Clone or fork repository</h3> <pre><code class=lang-bash>git <span class=hljs-keyword>clone</span> <span class=hljs-title>https</span>://github.com/themekit/adminplus.git\n</code></pre> <pre><code class=lang-bash><span class=hljs-built_in>cd</span> adminplus\n</code></pre> <h3 id=install-dependencies>Install dependencies</h3> <blockquote> <p>The adminplus package does not include any vendor libraries. To install all the dependencies, run: </p> </blockquote> <pre><code class=lang-bash>npm <span class=hljs-keyword>install</span>\n</code></pre> <h2 id=build>Build</h2> <blockquote> <p>You can easily build adminplus yourself. Our build tool of choice is webpack and any of the following commands will create the files <code>dist/adminplus.js</code> and <code>dist/adminplus.css</code></p> </blockquote> <h3 id=install-dev-dependencies>Install dev dependencies</h3> <blockquote> <p>Before you can build adminplus, make sure webpack is installed globally:</p> </blockquote> <pre><code class=lang-bash>npm <span class=hljs-keyword>install</span> -<span class=hljs-keyword>g</span> webpack\n</code></pre> <h3 id=production-build>Production build</h3> <p>Includes minification and several optimizations:</p> <pre><code class=lang-bash>npm <span class=hljs-built_in>run</span> build\n</code></pre> <h3 id=development-build>Development build</h3> <p>A faster build suited for development, with no optimizations and without minification:</p> <pre><code class=lang-bash>npm <span class=hljs-built_in>run</span> build-dev\n</code></pre> <h3 id=watch>Watch</h3> <p>Start an initial development build and then FAST continuous incremental builds:</p> <pre><code class=lang-bash>npm <span class=hljs-built_in>run</span> dev\n</code></pre> <h2 id=link-from-your-projects>Link from your projects</h2> <p>You can use <code>npm link</code> to create a global symlink on your system, pointing to your local development repository clone.</p> <h4 id=create-link>Create link</h4> <blockquote> <p>From the repository root directory:</p> </blockquote> <pre><code class=lang-bash><span class=hljs-built_in>npm</span> link\n</code></pre> <h4 id=link-from-project>Link from project</h4> <blockquote> <p>From any project using <code>npm</code>:</p> </blockquote> <pre><code class=lang-bash><span class=hljs-built_in>npm</span> link adminplus\n</code></pre> <p>Now <code>node_modules/adminplus</code> will be linked to your local development repository.</p>"},,function(s,a,n){function l(s){return s=p(s),s.toLowerCase()}var p=n(2);s.exports=l},function(s,a,n){function l(s){return s=p(s),t(s).replace(/^\w|\s\w/g,e)}var p=n(2),t=n(32),e=n(35);s.exports=l},function(s,a,n){function l(s){return s=p(s),s.replace(/(\w)(-)(\w)/g,"$1 $3")}var p=n(2);s.exports=l},function(s,a,n){function l(s){return s=p(s),s.toUpperCase()}var p=n(2);s.exports=l},,,function(s,a){s.exports='<div class="card marked" id=overview> <div class=card-block v-html="content | replaceLinks"></div> </div>'},,,,,,function(s,a,n){function l(s){return n(p(s))}function p(s){return t[s]||function(){throw new Error("Cannot find module '"+s+"'.")}()}var t={"./basic-usage.md":25,"./gulp-advanced-workflow.md":26,"./gulp-simple-workflow.md":27,"./home.md":28,"./laravel.md":29,"./local-development.md":30};l.keys=function(){return Object.keys(t)},l.resolve=p,s.exports=l,l.id=44}]);